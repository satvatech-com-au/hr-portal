import 'package:flutter/material.dart';
import 'package:gap/gap.dart';
import 'package:hr_app/src/models/hr.dart';

class EditUserAccessDialog extends StatefulWidget {
  final Hr hrMember;

  const EditUserAccessDialog({
    Key? key,
    required this.hrMember,
  }) : super(key: key);

  @override
  _EditUserAccessDialogState createState() => _EditUserAccessDialogState();
}

class _EditUserAccessDialogState extends State<EditUserAccessDialog> {
  late TextEditingController nameController;
  late TextEditingController contactController;
  late TextEditingController emailController;
  late TextEditingController passwordController;
  bool dashboard1 = false;
  bool staff = false;
  bool crm = false;
  bool medDelivery = false;
  bool authorization = false;
  bool report1 = false;
  bool dashboard2 = false;
  bool claimList = false;
  bool manualClaims = false;
  bool medVetting = false;
  bool refund = false;
  bool report2 = false;

  @override
  void initState() {
    super.initState();
    nameController = TextEditingController(text: widget.hrMember.name);
    contactController = TextEditingController(text: widget.hrMember.contact);
    emailController = TextEditingController(text: widget.hrMember.email);
    passwordController =
        TextEditingController(text: widget.hrMember.autoGeneratedPassword);
  }

  @override
  Widget build(BuildContext context) {
    return Dialog(
      child: Padding(
        padding: const EdgeInsets.all(100),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Row(children: [
              Expanded(
                child: TextFormField(
                  controller: nameController,
                  decoration: const InputDecoration(
                      labelText: 'Name', border: OutlineInputBorder()),
                ),
              ),
              const Gap(60),
              Expanded(
                child: TextFormField(
                  controller: contactController,
                  decoration: const InputDecoration(
                      labelText: 'Contact', border: OutlineInputBorder()),
                ),
              ),
            ]),
            const Gap(60),
            Row(
              children: [
                Expanded(
                  child: TextFormField(
                    controller: emailController,
                    decoration: const InputDecoration(
                      labelText: 'Email',
                      border: OutlineInputBorder(),
                    ),
                  ),
                ),
                const Gap(20),
                Expanded(
                  child: TextFormField(
                    enabled: false,
                    controller: passwordController,
                    decoration: const InputDecoration(
                      labelText: 'Auto generated',
                      border: OutlineInputBorder(),
                    ),
                  ),
                )
              ],
            ),
            const Gap(60),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: [
                const Column(
                  children: [
                    Text('Policy admin'),
                    Gap(
                      30,
                    ),
                    Text('Claims'),
                  ],
                ),
                Column(
                  children: [
                    Column(
                      children: [
                        const Text('Dashboard'),
                        Checkbox(
                          value: dashboard1,
                          onChanged: (bool? value) {
                            setState(() {
                              dashboard1 = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                    const Gap(
                      30,
                    ),
                    Column(
                      children: [
                        const Text('Dashboard'),
                        Checkbox(
                          value: dashboard2,
                          onChanged: (bool? value) {
                            setState(() {
                              dashboard2 = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
                Column(
                  children: [
                    Column(
                      children: [
                        const Text('Staff'),
                        Checkbox(
                          value: staff,
                          onChanged: (bool? value) {
                            setState(() {
                              staff = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                    const Gap(
                      30,
                    ),
                    Column(
                      children: [
                        const Text('Claim list'),
                        Checkbox(
                          value: claimList,
                          onChanged: (bool? value) {
                            setState(() {
                              claimList = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
                Column(
                  children: [
                    Column(
                      children: [
                        const Text('CRM'),
                        Checkbox(
                          value: crm,
                          onChanged: (bool? value) {
                            setState(() {
                              crm = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                    const Gap(
                      30,
                    ),
                    Column(
                      children: [
                        const Text('Manual claims'),
                        Checkbox(
                          value: manualClaims,
                          onChanged: (bool? value) {
                            setState(() {
                              manualClaims = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
                Column(
                  children: [
                    Column(
                      children: [
                        const Text('Med Delivery'),
                        Checkbox(
                          value: medDelivery,
                          onChanged: (bool? value) {
                            setState(() {
                              medDelivery = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                    const Gap(
                      30,
                    ),
                    Column(
                      children: [
                        const Text('Med Vetting'),
                        Checkbox(
                          value: medVetting,
                          onChanged: (bool? value) {
                            setState(() {
                              medVetting = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
                Column(
                  children: [
                    Column(
                      children: [
                        const Text('Authorization'),
                        Checkbox(
                          value: authorization,
                          onChanged: (bool? value) {
                            setState(() {
                              authorization = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                    const Gap(
                      30,
                    ),
                    Column(
                      children: [
                        const Text('Refund'),
                        Checkbox(
                          value: refund,
                          onChanged: (bool? value) {
                            setState(() {
                              refund = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
                Column(
                  children: [
                    Column(
                      children: [
                        const Text('Report'),
                        Checkbox(
                          value: report1,
                          onChanged: (bool? value) {
                            setState(() {
                              report1 = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                    const Gap(
                      30,
                    ),
                    Column(
                      children: [
                        const Text('Report'),
                        Checkbox(
                          value: report2,
                          onChanged: (bool? value) {
                            setState(() {
                              report2 = value ?? false;
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
              ],
            ),
            const Gap(
              30,
            ),
            ElevatedButton(
              onPressed: () {
                widget.hrMember.name = nameController.text;
                widget.hrMember.contact = contactController.text;
                widget.hrMember.email = emailController.text;
                widget.hrMember.autoGeneratedPassword = passwordController.text;
                Navigator.pop(context);
              },
              child: const Text('Save'),
            ),
          ],
        ),
      ),
    );
  }
}
